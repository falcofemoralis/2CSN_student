{"version":3,"sources":["ConsoleWindow/ConsoleWindow.js","Services/ServiceData.js","Users/Users.js","App/App.js","index.js"],"names":["ConsoleWindow","props","state","logs","prevProps","this","newLogs","split","setState","concat","logsElements","i","length","push","Date","toTimeString","className","Component","ServiceData","Users","users","isModalOpened","userlogs","logTypesTexts","subjects","fetch","method","then","response","ok","json","userId","logType","logInfo","getSubjectsName","id","console","log","JSON","parse","SubjectName","ru","unix","parseInt","toLocaleString","timesoze","map","user","NickName","Visits","LastOpen","onClick","getUserLogs","Code_User","isOpen","overlayClassName","userlog","index","LogType","convertLogInfo","Info","convertTime","PerformedOn","App","uploadedFile","showModal","request","fileInput","React","createRef","convertFile","bind","handleOpenModal","handleCloseModal","formData","FormData","append","HTTPRequest","url","data","body","text","n","ref","onChange","event","target","files","type","style","display","accept","current","click","handleBtn","showModal1","href","showModal2","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44e09515.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './ConsoleWindow.css';\r\n\r\nexport default class ConsoleWindow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { logs: [] };\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.logs !== this.props.logs && this.props.logs) {\r\n            const logs = this.state.logs;\r\n            const newLogs = this.props.logs.split('<br>');\r\n            this.setState({ logs: logs.concat(newLogs) });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const logsElements = [];\r\n        const logs = this.state.logs;\r\n        for (let i = logs.length - 1; i >= 0; i--) {\r\n            if (logs[i]) logsElements.push(<li key={i}>{(new Date).toTimeString()}: {logs[i]}</li>);\r\n        }\r\n        return (\r\n            <div>\r\n                <ul className=\"logs-list\">\r\n                    {logsElements}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","export const ServiceData = {\r\n    DOMAIN: \"https://csn-student.herokuapp.com/\"\r\n}","import React, { Component } from 'react'\r\nimport Modal from 'react-modal';\r\nimport './Users.css';\r\nimport { ServiceData } from '../Services/ServiceData';\r\n\r\nexport default class Users extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users: [], isModalOpened: false, userlogs: [], logTypesTexts: [\"Открыл приложение\", \"Открыл расписание\", \"Сменил расписание\", \"Сменил неделю\", \"Открыл предметы\", \"Открыл предмет\", \"Открыл работу\", \"Создал работу\",\r\n                \"Сменил состояние работы\", \"Удалил работу\", \"Изменил ценность предмета\", \"Открыл полную статистику\", \"Открыл расписание звонков\", \"Открыл поиск адутории\",\r\n                \"Сделал поиск комнаты\", \"Сменил вкладку корпуса\", \"Сменил вкладку этажа\", \"Открыл калькулятор рейтинга\", \"Расчитал рейтинг\", \"Открыл подсказку калькулятора\",\r\n                \"Открыл найстроки\", \"Сменил никнейм\", \"Сменил пароль\", \"Сменил язык\", \"Открыл профиль гитхаб\", \"Открыл профиль телеграм\"],\r\n            subjects: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(ServiceData.DOMAIN + '/api/users/all', {\r\n            method: 'GET'\r\n        }).then(response => {\r\n            if (response.ok) {\r\n                response.json().then((users) => {\r\n                    this.setState({ users: users });\r\n                });\r\n            }\r\n        });\r\n\r\n        fetch(ServiceData.DOMAIN + `/api/subjects/shortAll`, {\r\n            method: 'GET'\r\n        }).then(response => {\r\n            if (response.ok) {\r\n                response.json().then((subjects) => {\r\n                    this.setState({ subjects: subjects });\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    getUserLogs(userId) {\r\n        fetch(ServiceData.DOMAIN + `/api/users/logs/${userId}`, {\r\n            method: 'GET'\r\n        }).then(response => {\r\n            if (response.ok) {\r\n                response.json().then((userlogs) => {\r\n                    this.setState({ userlogs: userlogs });\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    convertLogInfo(logType, logInfo) {\r\n        switch (logType) {\r\n            case 1: break;\r\n        }\r\n\r\n        if (logType === \"1\" || logType === \"3\") {\r\n            if (logInfo === \"0\") {\r\n                return \"Расписание групп\";\r\n            } else {\r\n                return \"Расписание учителей\";\r\n            }\r\n        }\r\n        else if (logType === \"5\") {\r\n            return this.getSubjectsName(logInfo);\r\n        } else {\r\n            return logInfo;\r\n        }\r\n    }\r\n\r\n    getSubjectsName(id) {\r\n        console.log(this.state.subjects);\r\n        if (this.state.subjects.length > 0) {\r\n            const subjects = this.state.subjects;\r\n            for (let i = 0; i < subjects.length; ++i) {\r\n                if (subjects[i].id == id) {\r\n                    console.log(subjects[i]);\r\n                    return JSON.parse(subjects[i].SubjectName).ru;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    convertTime(unix) {\r\n        const date = new Date(parseInt(unix));\r\n        return date.toLocaleString(\"ru-RU\", { timesoze: \"Ukraine/Kiev\" });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"users\">\r\n                <ul className=\"users__list\">\r\n                    <li className=\"users__list-item\">\r\n                        <p className=\"users__list-item-name\">Никнейм</p>\r\n                        <p className=\"users__list-item-opens\">Кол-во входов</p>\r\n                        <p className=\"users__list-item-opens\">Последний вход</p>\r\n                        <p className=\"users__list-item-opens\">Logs</p>\r\n                    </li>\r\n                    {this.state.users.map((user) =>\r\n                        <li className=\"users__list-item\" key={user.NickName}>\r\n                            <p className=\"users__list-item-name table-text\">{user.NickName}</p>\r\n                            <p className=\"users__list-item-opens table-text\">{user.Visits}</p>\r\n                            <p className=\"users__list-item-opens table-text\">{user.LastOpen ?? \"Не входил\"}</p>\r\n                            <button className=\"opens-logs\" onClick={() => { this.setState({ isModalOpened: true }); this.getUserLogs(user.Code_User) }}>Открыть логи</button>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n                <Modal isOpen={this.state.isModalOpened} className=\"modal modal__user-logs\" overlayClassName=\"overlay\">\r\n                    <h4 className=\"sub-headerText\">Логи пользователя</h4>\r\n                    <ul className=\"users__list logs__list\">\r\n                        <li className=\"users__list-item\">\r\n                            <p className=\"users__list-item-name log__item\">Тип действия</p>\r\n                            <p className=\"users__list-item-opens log__item\">Доп. информация</p>\r\n                            <p className=\"users__list-item-opens log__item\">Время</p>\r\n                        </li>\r\n                        {this.state.userlogs.map((userlog, index) =>\r\n                            <li className=\"users__list-item\" key={index}>\r\n                                <p className=\"users__list-item-name table-text log__item\">{this.state.logTypesTexts[userlog.LogType]}</p>\r\n                                <p className=\"users__list-item-opens table-text log__item\">{this.convertLogInfo(userlog.LogType, userlog.Info)}</p>\r\n                                <p className=\"users__list-item-opens table-text log__item\">{this.convertTime(userlog.PerformedOn)\r\n                                }</p>\r\n                            </li>\r\n                        )}\r\n                    </ul>\r\n\r\n                    <button onClick={() => { this.setState({ isModalOpened: false }) }}>Закрыть</button>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Modal from 'react-modal';\r\nimport ConsoleWindow from '../ConsoleWindow/ConsoleWindow';\r\nimport Users from '../Users/Users';\r\nimport './App.css';\r\nimport { ServiceData } from '../Services/ServiceData';\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { uploadedFile: null, logs: null, showModal: false, request: null };\r\n    this.fileInput = React.createRef();\r\n    this.convertFile = this.convertFile.bind(this);\r\n    this.handleOpenModal = this.handleOpenModal.bind(this);\r\n    this.handleCloseModal = this.handleCloseModal.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Отапрвка файла на преобразование в JSON\r\n   */\r\n  convertFile() {\r\n    let formData = new FormData();\r\n    formData.append('file', this.state.uploadedFile);\r\n    this.HTTPRequest(\"/schedule/upload\", 'POST', formData);\r\n  }\r\n\r\n  /**\r\n   * Запрос к серверу \r\n   * @param {*} url - путь\r\n   * @param {*} method - метод\r\n   * @param {*} data - данные\r\n   */\r\n  HTTPRequest(url, method, data = null) {\r\n    fetch(ServiceData.DOMAIN + url, {\r\n      method: method,\r\n      body: data\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        response.text().then((text) => {\r\n          console.log(text);\r\n          this.setState({ logs: text });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  handleOpenModal(n, url, method, data) {\r\n    this.setState({ [`showModal${n}`]: true });\r\n  }\r\n\r\n  handleCloseModal(n) {\r\n    this.setState({ [`showModal${n}`]: false });\r\n  }\r\n\r\n  handleBtn(url, method, data = null) {\r\n    this.setState({ request: { url: url, method: method, data: data } });\r\n    this.handleOpenModal(2);\r\n  }\r\n\r\n  render() {\r\n    const uploadedFile = this.state.uploadedFile;\r\n    return (\r\n      <div className=\"app\">\r\n        <h3 className=\"headerText\">Админ панель CSN Student</h3>\r\n        <div className=\"main\">\r\n          <div>\r\n            <div className=\"menus\">\r\n              <div>\r\n                <h4 className=\"sub-headerText\">Настройка расписания</h4>\r\n                <div>\r\n                  <div className=\"controls\">\r\n                    <div>\r\n                      <input\r\n                        ref={this.fileInput}\r\n                        onChange={(event) => { this.setState({ uploadedFile: event.target.files[0] }); }}\r\n                        type=\"file\"\r\n                        style={{ display: \"none\" }}\r\n                        accept=\".txt\"\r\n                      />\r\n                      <button onClick={() => { this.fileInput.current.click(); }}>Загрузить файл</button>\r\n                    </div>\r\n                    {\r\n                      uploadedFile &&\r\n                      <button className=\"convert-bt\" onClick={this.convertFile}>Конвертировать файл</button>\r\n                    }\r\n                    <button onClick={() => { this.handleBtn(\"/schedule/new\", \"PUT\") }}>Обновить расп.</button>\r\n                    <button onClick={() => { this.handleBtn(\"/schedule/reset\", \"DELETE\") }}>Очистить расп.</button>\r\n                    <button onClick={() => { this.handleOpenModal(1) }}>Файл с расписанием?</button>\r\n                    <Modal isOpen={this.state.showModal1} className=\"modal\" overlayClassName=\"overlay\">\r\n                      <h4 className=\"sub-headerText\">Как получить файл .txt с расписанием</h4>\r\n                      <div className=\"hint\">\r\n                        <p>1) Преобразовать пдф файл <a href=\"https://products.aspose.app/pdf/ru/parser/pdf\">PDF converter</a></p>\r\n                        <p>2) Перевести кодировку в UTF-8</p>\r\n                      </div>\r\n                      <button onClick={() => { this.handleCloseModal(1) }}>Закрыть</button>\r\n                    </Modal>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <h4 className=\"sub-headerText\">Настройка кеша</h4>\r\n                <div>\r\n                  <div className=\"controls\">\r\n                    <button onClick={() => { this.handleBtn(\"/api/cache/create\", \"POST\") }}>Создать кеш</button>\r\n                    <button onClick={() => { this.handleBtn(\"/api/cache/recreate\", \"PUT\", \"groupsApi\") }}>Обновить группы</button>\r\n                    <button onClick={() => { this.handleBtn(\"/api/cache/recreate\", \"PUT\", \"subjectsApi\") }}>Обновить предметы</button>\r\n                    <button onClick={() => { this.handleBtn(\"/api/cache/recreate\", \"PUT\", \"teachersApi\") }}>Обновить преподов</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <ConsoleWindow logs={this.state.logs} />\r\n          </div>\r\n          <Users />\r\n        </div>\r\n        <Modal isOpen={this.state.showModal2} className=\"modal\" overlayClassName=\"overlay\">\r\n          <h4 className=\"sub-headerText\">Подтвердите свои действия</h4>\r\n          <button onClick={() => { this.HTTPRequest(this.state.request.url, this.state.request.method, this.state.request.data); this.handleCloseModal(2) }}>Подтвердить</button>\r\n          <button onClick={() => { this.handleCloseModal(2) }}>Отмена</button>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}